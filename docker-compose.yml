volumes:
  postgres:
  pgadmin:

services:
  gotenberg:
    image: gotenberg/gotenberg:8
    ports:
      - "3000:3000"
    command:
      - "gotenberg"
      - "--chromium-clear-cache=true"
      - "--chromium-auto-start=true"

  db:
    platform: linux/amd64
    build:
      dockerfile: Dockerfile
      context: ./
      target: pg
    ports:
      - 5432:5432
    volumes:
      - postgres:/var/lib/postgresql/data
    environment:
      PGUSER: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    # command: ["postgres", "-c", "log_statement=all", "-c", "log_destination=stderr"] # For Dev only!
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "-d", "postgres" ]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  pgadmin:
    platform: linux/amd64
    image: dpage/pgadmin4:latest
    depends_on:
      - db
    ports:
      # - "5431:53603"
      - "5430:80"
    volumes:
      - pgadmin:/var/lib/pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@sits.ruhr
      PGADMIN_DEFAULT_PASSWORD: admin
    restart: unless-stopped

  api-dev:
    build:
      dockerfile: Dockerfile
      context: ./
      target: dev
    tty: true
    stdin_open: true
    volumes:
      - ./assets:/opt/app/assets
      - ./docs:/opt/app/docs
      - ./internal:/opt/app/internal
      - ./sqlc:/opt/app/sqlc
      - ./files:/opt/app/files
      - ./main.go:/opt/app/main.go
    ports:
      - 8080:8080
    env_file: ".env"
    depends_on:
      - gotenberg
      - db

  api:
    build:
      dockerfile: Dockerfile
      context: ./
      target: prod
    ports:
      - 8081:8080
    env_file: ".env"
    depends_on:
      - gotenberg
      - db
